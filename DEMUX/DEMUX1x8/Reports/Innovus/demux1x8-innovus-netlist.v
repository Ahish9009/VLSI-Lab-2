/*
###############################################################
#  Generated by:      Cadence Innovus 16.21-s078_1
#  OS:                Linux x86_64(Host ID client02)
#  Generated on:      Sat Sep 14 00:53:14 2019
#  Design:            demux1x8
#  Command:           saveNetlist demux1x8-innovus-netlist.v
###############################################################
*/
// Generated by Cadence Genus(TM) Synthesis Solution 16.21-s018_1
// Generated on: Sep 12 2019 02:34:45 IST (Sep 11 2019 21:04:45 UTC)
// Verification Directory fv/demux1x8 
module demux1x2_3 (
	I1, 
	S0, 
	m1, 
	m2);
   input I1;
   input S0;
   output m1;
   output m2;

   NOR2BXL g17 (.AN(I1),
	.B(S0),
	.Y(m1));
   AND2X1 g18 (.A(S0),
	.B(I1),
	.Y(m2));
endmodule

module demux1x2 (
	I1, 
	S0, 
	m1, 
	m2);
   input I1;
   input S0;
   output m1;
   output m2;

   NOR2BXL g17 (.AN(I1),
	.B(S0),
	.Y(m1));
   AND2X1 g18 (.A(S0),
	.B(I1),
	.Y(m2));
endmodule

module demux1x2_1 (
	I1, 
	S0, 
	m1, 
	m2);
   input I1;
   input S0;
   output m1;
   output m2;

   NOR2BXL g17 (.AN(I1),
	.B(S0),
	.Y(m1));
   AND2XL g18 (.A(S0),
	.B(I1),
	.Y(m2));
endmodule

module demux1x2_2 (
	I1, 
	S0, 
	m1, 
	m2);
   input I1;
   input S0;
   output m1;
   output m2;

   NOR2BXL g17 (.AN(I1),
	.B(S0),
	.Y(m1));
   AND2XL g18 (.A(S0),
	.B(I1),
	.Y(m2));
endmodule

module demux1x4 (
	I1, 
	S1, 
	S0, 
	m1, 
	m2, 
	m3, 
	m4);
   input I1;
   input S1;
   input S0;
   output m1;
   output m2;
   output m3;
   output m4;

   // Internal wires
   wire int1;
   wire int2;

   demux1x2 A1 (.I1(I1),
	.S0(S1),
	.m1(int1),
	.m2(int2));
   demux1x2_1 A2 (.I1(int1),
	.S0(S0),
	.m1(m1),
	.m2(m2));
   demux1x2_2 A3 (.I1(int2),
	.S0(S0),
	.m1(m3),
	.m2(m4));
endmodule

module demux1x2_4 (
	I1, 
	S0, 
	m1, 
	m2);
   input I1;
   input S0;
   output m1;
   output m2;

   NOR2BXL g17 (.AN(I1),
	.B(S0),
	.Y(m1));
   AND2X1 g18 (.A(S0),
	.B(I1),
	.Y(m2));
endmodule

module demux1x2_5 (
	I1, 
	S0, 
	m1, 
	m2);
   input I1;
   input S0;
   output m1;
   output m2;

   NOR2BXL g17 (.AN(I1),
	.B(S0),
	.Y(m1));
   AND2XL g18 (.A(S0),
	.B(I1),
	.Y(m2));
endmodule

module demux1x2_6 (
	I1, 
	S0, 
	m1, 
	m2);
   input I1;
   input S0;
   output m1;
   output m2;

   NOR2BXL g17 (.AN(I1),
	.B(S0),
	.Y(m1));
   AND2XL g18 (.A(S0),
	.B(I1),
	.Y(m2));
endmodule

module demux1x4_1 (
	I1, 
	S1, 
	S0, 
	m1, 
	m2, 
	m3, 
	m4);
   input I1;
   input S1;
   input S0;
   output m1;
   output m2;
   output m3;
   output m4;

   // Internal wires
   wire int1;
   wire int2;

   demux1x2_4 A1 (.I1(I1),
	.S0(S1),
	.m1(int1),
	.m2(int2));
   demux1x2_5 A2 (.I1(int1),
	.S0(S0),
	.m1(m1),
	.m2(m2));
   demux1x2_6 A3 (.I1(int2),
	.S0(S0),
	.m1(m3),
	.m2(m4));
endmodule

module demux1x8 (
	I1, 
	S2, 
	S1, 
	S0, 
	m1, 
	m2, 
	m3, 
	m4, 
	m5, 
	m6, 
	m7, 
	m8);
   input I1;
   input S2;
   input S1;
   input S0;
   output m1;
   output m2;
   output m3;
   output m4;
   output m5;
   output m6;
   output m7;
   output m8;

   // Internal wires
   wire int1;
   wire int2;

   demux1x2_3 A1 (.I1(I1),
	.S0(S2),
	.m1(int1),
	.m2(int2));
   demux1x4 A2 (.I1(int1),
	.S1(S1),
	.S0(S0),
	.m1(m1),
	.m2(m2),
	.m3(m3),
	.m4(m4));
   demux1x4_1 A3 (.I1(int2),
	.S1(S1),
	.S0(S0),
	.m1(m5),
	.m2(m6),
	.m3(m7),
	.m4(m8));
endmodule

