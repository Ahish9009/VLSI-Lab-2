/*
###############################################################
#  Generated by:      Cadence Innovus 16.21-s078_1
#  OS:                Linux x86_64(Host ID client02)
#  Generated on:      Sat Sep 14 13:57:10 2019
#  Design:            decoder3x8
#  Command:           saveNetlist decoder3x8-innovus-netlist.v
###############################################################
*/
// Generated by Cadence Genus(TM) Synthesis Solution 16.21-s018_1
// Generated on: Sep 12 2019 02:37:37 IST (Sep 11 2019 21:07:37 UTC)
// Verification Directory fv/decoder3x8 
module decoder1x2 (
	EN, 
	I1, 
	m1, 
	m2);
   input EN;
   input I1;
   output m1;
   output m2;

   NOR2BXL g17 (.AN(EN),
	.B(I1),
	.Y(m1));
   AND2XL g18 (.A(I1),
	.B(EN),
	.Y(m2));
endmodule

module decoder1x2_1 (
	EN, 
	I1, 
	m1, 
	m2);
   input EN;
   input I1;
   output m1;
   output m2;

   NOR2BXL g17 (.AN(EN),
	.B(I1),
	.Y(m1));
   AND2XL g18 (.A(I1),
	.B(EN),
	.Y(m2));
endmodule

module decoder2x4 (
	EN, 
	I1, 
	I2, 
	m1, 
	m2, 
	m3, 
	m4);
   input EN;
   input I1;
   input I2;
   output m1;
   output m2;
   output m3;
   output m4;

   // Internal wires
   wire n_6;
   wire n_8;

   decoder1x2 A1 (.EN(n_8),
	.I1(I2),
	.m1(m1),
	.m2(m2));
   decoder1x2_1 A2 (.EN(n_6),
	.I1(I2),
	.m1(m3),
	.m2(m4));
   NOR2BXL g17 (.AN(EN),
	.B(I1),
	.Y(n_8));
   AND2X1 g18 (.A(I1),
	.B(EN),
	.Y(n_6));
endmodule

module decoder1x2_2 (
	EN, 
	I1, 
	m1, 
	m2);
   input EN;
   input I1;
   output m1;
   output m2;

   NOR2BXL g17 (.AN(EN),
	.B(I1),
	.Y(m1));
   AND2XL g18 (.A(I1),
	.B(EN),
	.Y(m2));
endmodule

module decoder1x2_3 (
	EN, 
	I1, 
	m1, 
	m2);
   input EN;
   input I1;
   output m1;
   output m2;

   NOR2BXL g17 (.AN(EN),
	.B(I1),
	.Y(m1));
   AND2XL g18 (.A(I1),
	.B(EN),
	.Y(m2));
endmodule

module decoder2x4_1 (
	EN, 
	I1, 
	I2, 
	m1, 
	m2, 
	m3, 
	m4);
   input EN;
   input I1;
   input I2;
   output m1;
   output m2;
   output m3;
   output m4;

   // Internal wires
   wire n_6;
   wire n_8;

   decoder1x2_2 A1 (.EN(n_8),
	.I1(I2),
	.m1(m1),
	.m2(m2));
   decoder1x2_3 A2 (.EN(n_6),
	.I1(I2),
	.m1(m3),
	.m2(m4));
   NOR2BXL g17 (.AN(EN),
	.B(I1),
	.Y(n_8));
   AND2X1 g18 (.A(I1),
	.B(EN),
	.Y(n_6));
endmodule

module decoder3x8 (
	EN, 
	I1, 
	I2, 
	I3, 
	m1, 
	m2, 
	m3, 
	m4, 
	m5, 
	m6, 
	m7, 
	m8);
   input EN;
   input I1;
   input I2;
   input I3;
   output m1;
   output m2;
   output m3;
   output m4;
   output m5;
   output m6;
   output m7;
   output m8;

   // Internal wires
   wire n_10;
   wire n_13;

   decoder2x4 A1 (.EN(n_13),
	.I1(I2),
	.I2(I3),
	.m1(m1),
	.m2(m2),
	.m3(m3),
	.m4(m4));
   decoder2x4_1 A2 (.EN(n_10),
	.I1(I2),
	.I2(I3),
	.m1(m5),
	.m2(m6),
	.m3(m7),
	.m4(m8));
   NOR2BXL g17 (.AN(EN),
	.B(I1),
	.Y(n_13));
   AND2X1 g18 (.A(I1),
	.B(EN),
	.Y(n_10));
endmodule

