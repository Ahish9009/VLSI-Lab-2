/*
###############################################################
#  Generated by:      Cadence Innovus 16.21-s078_1
#  OS:                Linux x86_64(Host ID client02)
#  Generated on:      Fri Sep 13 03:11:40 2019
#  Design:            mux8x1
#  Command:           saveNetlist mux8x1-netlist.v
###############################################################
*/
// Generated by Cadence Genus(TM) Synthesis Solution 16.21-s018_1
// Generated on: Sep 12 2019 02:32:33 IST (Sep 11 2019 21:02:33 UTC)
// Verification Directory fv/mux8x1 
module mux2x1 (
	S0, 
	x1, 
	x2, 
	m1);
   input S0;
   input x1;
   input x2;
   output m1;

   MX2X1 g23 (.A(x1),
	.B(x2),
	.S0(S0),
	.Y(m1));
endmodule

module mux2x1_1 (
	S0, 
	x1, 
	x2, 
	m1);
   input S0;
   input x1;
   input x2;
   output m1;

   MX2X1 g23 (.A(x1),
	.B(x2),
	.S0(S0),
	.Y(m1));
endmodule

module mux2x1_2 (
	S0, 
	x1, 
	x2, 
	m1);
   input S0;
   input x1;
   input x2;
   output m1;

   MX2X1 g23 (.A(x1),
	.B(x2),
	.S0(S0),
	.Y(m1));
endmodule

module mux4x1 (
	S0, 
	S1, 
	x1, 
	x2, 
	x3, 
	x4, 
	m1);
   input S0;
   input S1;
   input x1;
   input x2;
   input x3;
   input x4;
   output m1;

   // Internal wires
   wire int1;
   wire int2;

   mux2x1 A1 (.S0(S0),
	.x1(x1),
	.x2(x2),
	.m1(int1));
   mux2x1_1 A2 (.S0(S0),
	.x1(x3),
	.x2(x4),
	.m1(int2));
   mux2x1_2 A3 (.S0(S1),
	.x1(int1),
	.x2(int2),
	.m1(m1));
endmodule

module mux2x1_3 (
	S0, 
	x1, 
	x2, 
	m1);
   input S0;
   input x1;
   input x2;
   output m1;

   MX2X1 g23 (.A(x1),
	.B(x2),
	.S0(S0),
	.Y(m1));
endmodule

module mux2x1_4 (
	S0, 
	x1, 
	x2, 
	m1);
   input S0;
   input x1;
   input x2;
   output m1;

   MX2X1 g23 (.A(x1),
	.B(x2),
	.S0(S0),
	.Y(m1));
endmodule

module mux2x1_5 (
	S0, 
	x1, 
	x2, 
	m1);
   input S0;
   input x1;
   input x2;
   output m1;

   MX2X1 g23 (.A(x1),
	.B(x2),
	.S0(S0),
	.Y(m1));
endmodule

module mux4x1_1 (
	S0, 
	S1, 
	x1, 
	x2, 
	x3, 
	x4, 
	m1);
   input S0;
   input S1;
   input x1;
   input x2;
   input x3;
   input x4;
   output m1;

   // Internal wires
   wire int1;
   wire int2;

   mux2x1_3 A1 (.S0(S0),
	.x1(x1),
	.x2(x2),
	.m1(int1));
   mux2x1_4 A2 (.S0(S0),
	.x1(x3),
	.x2(x4),
	.m1(int2));
   mux2x1_5 A3 (.S0(S1),
	.x1(int1),
	.x2(int2),
	.m1(m1));
endmodule

module mux2x1_6 (
	S0, 
	x1, 
	x2, 
	m1);
   input S0;
   input x1;
   input x2;
   output m1;

   MX2X1 g23 (.A(x1),
	.B(x2),
	.S0(S0),
	.Y(m1));
endmodule

module mux8x1 (
	S0, 
	S1, 
	S2, 
	x1, 
	x2, 
	x3, 
	x4, 
	x5, 
	x6, 
	x7, 
	x8, 
	m1);
   input S0;
   input S1;
   input S2;
   input x1;
   input x2;
   input x3;
   input x4;
   input x5;
   input x6;
   input x7;
   input x8;
   output m1;

   // Internal wires
   wire int1;
   wire int2;

   mux4x1 A1 (.S0(S0),
	.S1(S1),
	.x1(x1),
	.x2(x2),
	.x3(x3),
	.x4(x4),
	.m1(int1));
   mux4x1_1 A2 (.S0(S0),
	.S1(S1),
	.x1(x5),
	.x2(x6),
	.x3(x7),
	.x4(x8),
	.m1(int2));
   mux2x1_6 A3 (.S0(S2),
	.x1(int1),
	.x2(int2),
	.m1(m1));
endmodule

